#!/usr/bin/perl -w

use strict;

open(COMMAND, "qstat -r |");
my @jobs;
foreach my $line (<COMMAND>) {
    if ($line =~ m,^(\d+\.mgt)\s+,) {
	push @jobs, $1;
    }
}
close(COMMAND);

foreach my $job (@jobs) {
    my %stats = get_job_stats($job);

    # this stuff is currently unused
    my %hostcount;
    if (defined $stats{exec_host}) {
	foreach my $hostspec (split(/\+/,$stats{exec_host})) {
	    my ($host, $proc) = split(m,/, , $hostspec);
	    $hostcount{$host} = 0 if not defined $hostcount{$host};
	    $hostcount{$host}++;
	}
    }

    #ssh into the nodes to find out if they are actually unused.
    my $unused_count=0;
    foreach my $machine (keys %hostcount) {
	#open(COMMAND, "ssh -n $machine 'grep -e \"^processor\" /proc/cpuinfo | wc -l ' |");
	#my $count = <COMMAND>;
	#chomp $count;
	#close(COMMAND);
	#next if $count !~ /^\d+$/;

	# leave one processor on each machine
	#$count--;

	my $count = 8;
	
	open(COMMAND, "ssh -n $machine 'uptime' |") or next;
	foreach my $line (<COMMAND>) {
	    if ($line =~ /load average:\s+\S+,\s+\S+,\s+(\d*\.\d+)/) {
		my $load = $1;
		$load += 0.70; # round up.
		$count -= int($load);
		last;
	    }
	}
	if ($count > 0) {
	    $unused_count+=$count;
	}
	close(COMMAND);
    }
    print "$stats{Job_Id}\t$stats{Job_Owner}\t$stats{Job_Name}\t$unused_count\n" if $unused_count;
}
exit(0);

sub get_job_stats {
    my ($job_id) = @_;
    my %stats;
    $stats{Job_Id} = $job_id;

    my $command;
    open($command, "qstat -f $job_id |");
    #search for exec host line
    my $found_exec_host=0;
    my $line=<$command>; #strip first line.
    $line=<$command>;
    while ($line) {
	chomp $line;
	if ($line =~ m,^\s+([A-Za-z_.]+) = (.*),) {
	    my $key = $1;
	    my $value = $2;
	    while($line = <$command>) {
		last if ($line !~ m,^\t,);
		chomp $line;
		$line =~ s/^\s+//;
		$line =~ s/\s+$//;
		$value .= $line;
	    }
	    $stats{$key} = $value;
	} else {
	    $line = <$command>;
	}
    }
    close($command);
    return %stats;
}

